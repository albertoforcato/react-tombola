{"version":3,"sources":["actions/prizeAction.js","components/summary-box/ManagementButtons.jsx","utils/mathUtils.js","utils/gameUtils.js","components/summary-box/DrawCard.jsx","components/summary-box/SummaryBox.jsx","components/GameBox.jsx","components/game-settings/AutomaticDrawSwitch.jsx","components/game-settings/CheckboxPrizesList.jsx","components/game-settings/GameSettings.jsx","components/game-settings/InitialGameSettingsModal.jsx","components/game-settings/InGameSettingsModal.jsx","components/TombolaGame.jsx","components/Footer.jsx","App.js","serviceWorker.js","reducers/managePrizesSettings.js","reducers/manageDrewNumbers.js","reducers/undoRedoManagement.js","reducers/index.js","i18n.js","index.js"],"names":["addDrewNumber","drewNumber","type","ManagementButtons","dispatch","useDispatch","t","useTranslation","canUndo","useSelector","state","undoRedoManagement","past","length","canRedo","future","className","data-toggle","title","onClick","UndoActionCreators","undo","disabled","size","color","redo","mathUtils","rangeRightEdgeExcluded","min","max","Array","map","_","i","range","from","chunkArray","array","chunk_size","results","c","push","splice","randomNumber","Math","floor","random","gameUtils","getNumbers","objectsList","filter","object","isNaN","getNotNumbers","getCheckedPrizes","prizes","prize","checked","StyledButton","styled","div","SummaryBoxDrawFooter","drewNumbers","present","automaticDraw","managePrizesSettings","availableNumbers","manageDrewNumbers","handleAutomaticDrawClick","el","includes","style","pointerEvents","DrawCard","useState","loadingNumber","presentNumber","SummaryBox","GameBox","gameNumber","SingleItems","key","chArray","item","value","checkedPrizes","console","log","assignedPrizes","availablePrizes","nextPrize","reduce","prev","curr","id","letterSpacing","name","assignedPrize","box","AutomaticDrawSwitch","onChange","defaultChecked","htmlFor","CheckboxPrizesList","handleCheckChange","event","parseInt","target","list","GameSettings","InitialGameSettingsModal","showSettingsModal","setShowSettingsModal","Modal","show","backdrop","centered","Header","Title","Body","Footer","InGameSettingsModal","showInGameSettings","handleSaveClick","TombolaGame","initialNumbers","useEffect","numbers","href","Loader","role","App","fallback","basename","process","Boolean","window","location","hostname","match","initialState","action","newPrizes","p","drewPrize","undoableDrewNumbers","undoable","undefined","tombolaApp","combineReducers","i18n","use","I18NextXhrBackend","I18nextBrowserLanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ns","defaultNS","backend","loadPath","composeEnhancers","composeWithDevTools","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f57523d5.chunk.js","sourcesContent":["export const changePrizeActivation = (id) => {\r\n    return {\r\n        type: \"CHANGE_PRIZE_ACTIVATION\",\r\n        id\r\n    }\r\n};\r\n\r\nexport const changeAutomaticDrawState = () => {\r\n    return {\r\n        type: \"CHANGE_AUTOMATIC_DRAW_STATE\"\r\n    }\r\n};\r\n\r\nexport const addInitialNumbers = (numbers) => {\r\n    return {\r\n        type: \"ADD_INITIAL_NUMBERS\",\r\n        numbers\r\n    }\r\n};\r\n\r\nexport const addDrewNumber = (drewNumber) => {\r\n    return{\r\n        type: \"ADD_DREW_NUMBER\",\r\n        drewNumber\r\n    }\r\n};\r\n\r\nexport const addAssignedPrize = (assignedPrize) => {\r\n    return {\r\n        type: \"ADD_ASSIGNED_PRIZE\",\r\n        assignedPrize\r\n    }\r\n}\r\n\r\nexport const switchInGameSettings = () => {\r\n    return{\r\n        type: \"SWITCH_IN_GAME_SETTINGS\"\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActionCreators as UndoActionCreators } from \"redux-undo\";\r\nimport { RotateCcw, RotateCw, Settings } from \"react-feather\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { switchInGameSettings } from \"../../actions/prizeAction\";\r\n\r\n/**\r\n * This component contains the button to manage the entire game.\r\n */\r\nconst ManagementButtons = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const canUndo =\r\n    useSelector(state => state.undoRedoManagement.past.length) > 0;\r\n  const canRedo =\r\n    useSelector(state => state.undoRedoManagement.future.length) > 0;\r\n\r\n  /**\r\n   * The UNDO button to manage the draw.\r\n   */\r\n  const UndoButton = () => {\r\n    const handleUndoClick = () => {\r\n      dispatch(UndoActionCreators.undo());\r\n    };\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm btn-warning mx-1 my-1\"\r\n        data-toggle=\"back-arrow\"\r\n        title={t(\"game-page.go-back\")}\r\n        onClick={() => handleUndoClick()}\r\n        disabled={!canUndo}\r\n      >\r\n        <RotateCcw size=\"20\" color=\"white\" />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * The REDO button to manage the draw.\r\n   */\r\n  const RedoButton = () => {\r\n    const handleRedoClick = () => {\r\n      dispatch(UndoActionCreators.redo());\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm btn-warning mx-1 my-1\"\r\n        data-toggle=\"forth-arrow\"\r\n        title={t(\"game-page.go-forth\")}\r\n        onClick={() => handleRedoClick()}\r\n        disabled={!canRedo}\r\n      >\r\n        <RotateCw size=\"20\" color=\"white\" />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * The setting button to manage prizes and automatic draw.\r\n   */\r\n  const SettingButton = () => {\r\n    const handleSettingsClick = () => {\r\n      dispatch(switchInGameSettings());\r\n    };\r\n    return (\r\n      <button className=\"btn btn-danger mx-1 my-1\">\r\n        <Settings\r\n          size=\"20\"\r\n          color=\"white\"\r\n          onClick={() => handleSettingsClick()}\r\n        />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card border-0\">\r\n      <div className=\"card-body\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-between\">\r\n            <div className=\"btn-group d-flex \">\r\n              <UndoButton />\r\n              <RedoButton />\r\n            </div>\r\n            <SettingButton />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagementButtons;\r\n","const mathUtils = {\r\n  // create an array of numbers between min and max (right edge excluded)\r\n  rangeRightEdgeExcluded: (min, max) =>\r\n    [...Array(max - min)].map((_, i) => i + min),\r\n  // create an array of numbers between min and max (edges included)\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n  chunkArray: (array, chunk_size) => {\r\n    let results = [];\r\n    let c = [...array];\r\n    while (c.length) {\r\n      results.push(c.splice(0, chunk_size));\r\n    }\r\n    //console.log(results);\r\n    return results;\r\n  },\r\n\r\n  randomNumber: (array) => {\r\n      return array[Math.floor(Math.random() * array.length)];\r\n  }\r\n};\r\n\r\nexport default mathUtils;","const gameUtils = {\r\n  getNumbers: objectsList => objectsList.filter(object => !isNaN(object)),\r\n  getNotNumbers: objectsList => objectsList.filter(object => isNaN(object)),\r\n  getCheckedPrizes: prizes => prizes.filter(prize => prize.checked)\r\n};\r\n\r\nexport default gameUtils;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addDrewNumber } from \"../../actions/prizeAction\";\r\nimport mathUtils from \"../../utils/mathUtils\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport gameUtils from \"../../utils/gameUtils\";\r\n\r\n/**\r\n * The last drew number div style.\r\n */\r\nconst StyledButton = styled.div`\r\n  pointer-events: none;\r\n  position: relative;\r\n  width: 50%;\r\n  padding-bottom: 50%;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n\r\n  div {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 6vw;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst SummaryBoxDrawFooter = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const drewNumbers = useSelector(state =>\r\n    gameUtils.getNumbers(state.undoRedoManagement.present)\r\n  );\r\n  const automaticDraw = useSelector(\r\n    state => state.managePrizesSettings.automaticDraw\r\n  );\r\n  const availableNumbers = useSelector(\r\n    state => state.manageDrewNumbers.availableNumbers\r\n  );\r\n\r\n  const drawableNumbers = () => {\r\n    return availableNumbers.filter(el => !drewNumbers.includes(el));\r\n  };\r\n\r\n  /**\r\n   * This function handle the automatic draw button.\r\n   */\r\n  const handleAutomaticDrawClick = () => {\r\n    let drewNumber = mathUtils.randomNumber(drawableNumbers());\r\n    dispatch(addDrewNumber(drewNumber));\r\n    // SET FUNCTION WITH TIMEOUT <- loading number: false\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`btn btn-success ${automaticDraw ? \"\" : \"disabled\"}`}\r\n      style={{ pointerEvents: automaticDraw ? \"\" : \"none\" }}\r\n      onClick={() => handleAutomaticDrawClick()}\r\n    >\r\n      {t(\"generics.draw\")}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst DrawCard = () => {\r\n  const { t } = useTranslation();\r\n  const [loadingNumber, setLoadingNumber] = useState(false);\r\n  const drewNumbers = useSelector(state =>\r\n    gameUtils.getNumbers(state.undoRedoManagement.present)\r\n  );\r\n  const presentNumber = drewNumbers[drewNumbers.length - 1];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"row justify-content-center text-center\">\r\n          <h3 className=\"\">{t(\"game-page.last-draw-number\")}</h3>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <StyledButton className=\"my-4\">\r\n            {loadingNumber ? (\r\n              \"INSERT HTML CODE SPINNER\"\r\n            ) : (\r\n              <div>{presentNumber == null ? \"#\" : presentNumber}</div>\r\n            )}\r\n          </StyledButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-footer border-0 d-flex flex-wrap justify-content-center\">\r\n        <SummaryBoxDrawFooter />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawCard;\r\n","import React from \"react\";\r\nimport ManagementButtons from \"./ManagementButtons\";\r\nimport DrawCard from \"./DrawCard\";\r\n\r\nconst SummaryBox = () => {\r\n  return (\r\n    <div className=\"card border-0\">\r\n      <div className=\"card-body\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <DrawCard />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <ManagementButtons />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryBox;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addDrewNumber, addAssignedPrize } from \"../actions/prizeAction\";\r\nimport mathUtils from \"../utils/mathUtils\";\r\nimport gameUtils from \"../utils/gameUtils\";\r\n\r\nconst GameBox = ({ gameNumber }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const drewNumbers = useSelector(state =>\r\n    gameUtils.getNumbers(state.undoRedoManagement.present)\r\n  );\r\n  //console.log(drewNumbers);\r\n\r\n  const handleNumberClick = number => {\r\n    //console.log(number);\r\n    dispatch(addDrewNumber(number));\r\n  };\r\n  const SingleItems = ({ array }) => {\r\n    return (\r\n      <div key={array}>\r\n        {array.map(chArray => (\r\n          <div className=\"container-fluid\" key={`container-${chArray}`}>\r\n            <div className=\"row justify-content-between\" key={chArray}>\r\n              {chArray.map(item => (\r\n                <button\r\n                  className={`btn btn-outline-warning col mx-1 my-1 ${\r\n                    drewNumbers.includes(item) ? \"active none\" : \"\"\r\n                  }`}\r\n                  key={item}\r\n                  value={item}\r\n                  onClick={() => handleNumberClick(item)}\r\n                  style={{\r\n                    pointerEvents: drewNumbers.includes(item) ? \"none\" : \"\"\r\n                  }}\r\n                >\r\n                  <div>{item}</div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SingleBox = ({ array }) => {\r\n    return (\r\n      <>\r\n        {array.map(box => (\r\n          <div className=\"col-md-6 my-1 col-12\" key={`box-${box}`}>\r\n            <div className=\"card\" key={box}>\r\n              <div className=\"card-body\">\r\n                <SingleItems array={mathUtils.chunkArray(box, 5)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const GameBoxHeader = () => {\r\n    const checkedPrizes = useSelector(state =>\r\n      gameUtils.getCheckedPrizes(state.managePrizesSettings.prizes)\r\n    );\r\n    console.log(\"CHECKED_PRIZES\", checkedPrizes);\r\n\r\n    const assignedPrizes = useSelector(state =>\r\n      gameUtils.getNotNumbers(state.undoRedoManagement.present)\r\n    );\r\n    console.log(\"ASSIGNED_PRIZES\", assignedPrizes);\r\n\r\n    const availablePrizes = checkedPrizes.filter(\r\n      prize => !assignedPrizes.includes(prize)\r\n    );\r\n    console.log(\"AVAILABLE_PRIZES\", availablePrizes);\r\n\r\n    const nextPrize = availablePrizes.reduce((prev, curr) =>\r\n      prev.id < curr.id ? prev : curr\r\n    );\r\n    console.log(\"NEXT_PRIZE\", nextPrize);\r\n    //const availablePrizes\r\n\r\n    const handleAssignedPrizeClick = () => {\r\n      dispatch(addAssignedPrize(nextPrize));\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-between align-items-center\">\r\n          <ul className=\"list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <h5 className=\"align-center text-muted\">\r\n                {t(\"game-page.actual-prize\")}\r\n              </h5>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <h2\r\n                className=\"align-center text-uppercase\"\r\n                style={{ letterSpacing: \"0.03em\" }}\r\n              >\r\n                {t(`welcome-page.prizes.${nextPrize.name}`)}\r\n              </h2>\r\n            </li>\r\n          </ul>\r\n\r\n          <button className=\"btn btn-info\" onClick={handleAssignedPrizeClick}>\r\n            {t(\"generics.award\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0\">\r\n        <GameBoxHeader />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row my-3\">\r\n            <SingleBox array={gameNumber} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBox;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeAutomaticDrawState } from \"../../actions/prizeAction\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * The switch component to manage the automatic draw state.\r\n */\r\nconst AutomaticDrawSwitch = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const automaticDraw = useSelector(\r\n    state => state.managePrizesSettings.automaticDraw\r\n  );\r\n\r\n  /**\r\n   * This method handle the status changing of the automatic draw switch component.\r\n   */\r\n  const handleSwitchChange = () => {\r\n    dispatch(changeAutomaticDrawState());\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-control custom-switch\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"custom-control-input\"\r\n        onChange={handleSwitchChange}\r\n        defaultChecked={automaticDraw}\r\n        id=\"automaticDrawSwitch\"\r\n      />\r\n      <label className=\"custom-control-label\" htmlFor=\"automaticDrawSwitch\">\r\n        {t(\"welcome-page.automatic-draw\")}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutomaticDrawSwitch;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { changePrizeActivation } from \"../../actions/prizeAction\";\r\n\r\n/**\r\n * The checkbox list of tombola prizes.\r\n */\r\nconst CheckboxPrizesList = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const prizes = useSelector(state => state.managePrizesSettings.prizes);\r\n\r\n  /**\r\n   * This method handle changes from any checkbox in the list.\r\n   * @param {object} event\r\n   */\r\n  const handleCheckChange = event => {\r\n    dispatch(changePrizeActivation(parseInt(event.target.id)));\r\n  };\r\n\r\n  const list = prizes.map(prize => {\r\n    return (\r\n      <div\r\n        className=\"col-lg-2 col-md-4 col-sm-6 col-12\"\r\n        key={`col-${prize.id}`}\r\n      >\r\n        <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            onChange={handleCheckChange}\r\n            checked={prize.checked}\r\n            id={prize.id}\r\n          />\r\n          <label htmlFor={prize.id} className=\"custom-control-label\">\r\n            {t(`welcome-page.prizes.${prize.name}`)}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <>{list}</>;\r\n};\r\n\r\nexport default CheckboxPrizesList;\r\n","import React from \"react\";\r\nimport AutomaticDrawSwitch from \"./AutomaticDrawSwitch\";\r\nimport CheckboxPrizesList from \"./CheckboxPrizesList\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst GameSettings = () => {\r\n  const { t } = useTranslation();\r\n  \r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <small className=\"form-check-label\">\r\n          {t(\"welcome-page.settings-checkbox-tip\")}\r\n        </small>\r\n        <div className=\"row\">\r\n          <CheckboxPrizesList />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group d-flex flex-wrap\">\r\n        <AutomaticDrawSwitch />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GameSettings;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport GameSettings from \"./GameSettings\";\r\n\r\n/**\r\n * The initial modal to show to let user changing game settings.\r\n */\r\nconst InitialGameSettingsModal = () => {\r\n  const { t } = useTranslation();\r\n  const [showSettingsModal, setShowSettingsModal] = useState(true);\r\n\r\n  /**\r\n   * This function handle the onHide event of starting settings modal.\r\n   */\r\n  const handleFunctionOnHide = () => {\r\n    setShowSettingsModal(!showSettingsModal);\r\n  };\r\n\r\n  return (\r\n    <Modal show={showSettingsModal} backdrop={`static`} size=\"lg\" centered>\r\n      <Modal.Header>\r\n        <Modal.Title>{t(\"generics.welcome\")}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <GameSettings />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button className=\"btn btn-primary\" onClick={handleFunctionOnHide}>\r\n          {t(\"generics.start-the-game\")}\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InitialGameSettingsModal;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport GameSettings from \"./GameSettings\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { switchInGameSettings } from \"../../actions/prizeAction\";\r\n\r\nconst InGameSettingsModal = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const showInGameSettings = useSelector(\r\n    state => state.managePrizesSettings.showInGameSettings\r\n  );\r\n\r\n  const handleSaveClick = () => {\r\n    dispatch(switchInGameSettings());\r\n  };\r\n\r\n  return (\r\n    <Modal show={showInGameSettings} backdrop={`static`} size=\"lg\" centered>\r\n      <Modal.Header>\r\n        <Modal.Title>{t(\"generics.settings\")}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <GameSettings />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n          <div className=\"container\">\r\n              <div className=\"row justify-content-between\">\r\n              <button className=\"btn btn-outline-danger\" onClick={handleSaveClick}>{t(\"generics.reset\")}</button>\r\n              <button className=\"btn btn-primary\" onClick={handleSaveClick}>{t(\"generics.save\")}</button>\r\n              </div>\r\n          </div>\r\n        \r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InGameSettingsModal;\r\n","import SummaryBox from \"./summary-box/SummaryBox\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addInitialNumbers } from \"../actions/prizeAction\";\r\nimport mathUtils from \"../utils/mathUtils\";\r\nimport GameBox from \"./GameBox\";\r\nimport InitialGameSettingsModal from \"./game-settings/InitialGameSettingsModal\";\r\nimport InGameSettingsModal from \"./game-settings/InGameSettingsModal\";\r\n\r\nconst TombolaGame = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialNumbers = mathUtils.range(1, 90);\r\n  const gameNumber = mathUtils.chunkArray(initialNumbers, 15);\r\n\r\n  useEffect(() => {\r\n    dispatch(addInitialNumbers(initialNumbers));\r\n  });\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-md-center\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row my-2\">\r\n          <div className=\"col-xl-4 col-md-4 offset-md-0 col-12 order-md-1\">\r\n            <SummaryBox />\r\n          </div>\r\n          <div className=\"col-xl-8 col-md-8 col-12 order-md-0\">\r\n            <GameBox gameNumber={gameNumber} />\r\n          </div>\r\n        </div>\r\n        <InitialGameSettingsModal />\r\n        <InGameSettingsModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TombolaGame;\r\n","import React from \"react\";\r\nimport { FaReact, FaGithub } from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer mt-auto py-3\">\r\n      <div className=\"container align-items-center\">\r\n        <span className=\"text-muted\">\r\n          Made with{\" \"}\r\n          <a href=\"https://it.reactjs.org/\" className=\"text-decoration-none\">\r\n            <FaReact />\r\n          </a>\r\n          . For other projects check my <FaGithub />{\" \"}\r\n          <a href=\"https://it.reactjs.org/\" className=\"text-decoration-none\">\r\n            GitHub\r\n          </a>\r\n        </span>{\" \"}\r\n        repo.\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport TombolaGame from \"./components/TombolaGame\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <TombolaGame />\r\n          \r\n        </div>\r\n      </BrowserRouter>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nconst Loader = () => (\r\n  <div className=\"container d-flex justify-content-center align-items-center\">\r\n    <div className=\"spinner-border text-primary\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  prizes: [\r\n    { id: 1, name: \"ambo\", checked: true },\r\n    { id: 2, name: \"terna\", checked: true },\r\n    { id: 3, name: \"quaterna\", checked: true },\r\n    { id: 4, name: \"cinquina\", checked: true },\r\n    { id: 5, name: \"tombola\", checked: true },\r\n    { id: 6, name: \"tombolino\", checked: true }\r\n  ],\r\n  automaticDraw: false,\r\n  showInGameSettings: false\r\n};\r\n\r\nconst managePrizesSettings = (state = initialState, action) => {\r\n  //console.log(\"ACTION: \", action);\r\n\r\n  switch (action.type) {\r\n    case \"CHANGE_PRIZE_ACTIVATION\": {\r\n      let newPrizes = state.prizes.map(p => {\r\n        if (p.id === action.id) {\r\n          p.checked = !p.checked;\r\n        }\r\n        return p;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        prizes: newPrizes\r\n      };\r\n    }\r\n    case \"CHANGE_AUTOMATIC_DRAW_STATE\": {\r\n      return {\r\n        ...state,\r\n        automaticDraw: !state.automaticDraw\r\n      };\r\n    }\r\n    case \"SWITCH_IN_GAME_SETTINGS\":{\r\n      return{\r\n        ...state,\r\n        showInGameSettings: !state.showInGameSettings\r\n      };\r\n    } \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default managePrizesSettings;\r\n","const initialState = {\r\n  availableNumbers: null\r\n};\r\nconst manageDrewNumbers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INITIAL_NUMBERS\": {\r\n      //console.log(action.numbers);\r\n      return {\r\n        ...state,\r\n        availableNumbers: action.numbers\r\n      };\r\n    }\r\n    case \"REMOVE_DREW_NUMBERS\": {\r\n        //console.log(action.numbers);\r\n        let numbers = null\r\n        return{\r\n            ...state,\r\n            availableNumbers: numbers\r\n        }\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default manageDrewNumbers;","import undoable from \"redux-undo\";\r\n\r\nconst initialState = [];\r\n\r\nconst drewNumber = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DREW_NUMBER\":\r\n      return action.drewNumber;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst drewPrize = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ASSIGNED_PRIZE\":\r\n      console.log(\"ASSIGNED_PRIZE\", action.assignedPrize);\r\n      return action.assignedPrize;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst undoRedoManagement = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DREW_NUMBER\": {\r\n      return [...state, drewNumber(undefined, action)];\r\n    }\r\n    case \"ADD_ASSIGNED_PRIZE\": {\r\n      return [...state, drewPrize(undefined, action)];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst undoableDrewNumbers = undoable(undoRedoManagement);\r\n\r\nexport default undoableDrewNumbers;\r\n","import { combineReducers } from \"redux\";\r\nimport managePrizesSettings from \"./managePrizesSettings\";\r\nimport manageDrewNumbers from \"./manageDrewNumbers\";\r\nimport undoRedoManagement from \"./undoRedoManagement\";\r\n\r\nconst tombolaApp = combineReducers({\r\n  undoRedoManagement,\r\n  managePrizesSettings,\r\n  manageDrewNumbers\r\n});\r\n\r\nexport default tombolaApp;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport I18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\r\nimport I18NextXhrBackend from \"i18next-xhr-backend\";\r\n\r\nconst options = {\r\n  fallbackLng: \"it\",\r\n  debug: false,\r\n  interpolation: {\r\n    escapeValue: false\r\n  },\r\n  ns: [\"translation\"],\r\n  defaultNS: \"translation\",\r\n  backend: {\r\n    loadPath: \"locales/{{lng}}/{{ns}}.json\"\r\n  }\r\n};\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(I18NextXhrBackend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(I18nextBrowserLanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  .init(options);\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n// import i18n (needs to be bundled ;))\r\nimport \"./i18n\";\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  // options like actionSanitizer, stateSanitizer\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n  // other store enhancers if any\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}