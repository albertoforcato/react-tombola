{"version":3,"sources":["actions/prizeAction.js","components/generic-components/InlineCheckboxList.jsx","components/GameSettings.jsx","components/Home.jsx","components/SummaryBox.jsx","components/TombolaGame.jsx","App.js","serviceWorker.js","reducers/drewNumbers.js","reducers/managePrizesSettings.js","reducers/index.js","i18n.js","index.js"],"names":["changePrizeActivation","id","type","InlineCheckboxList","items","handleFunction","labelTip","i18nPath","t","useTranslation","dispatch","useDispatch","handleCheckChange","e","parseInt","target","list","map","item","className","key","onChange","checked","htmlFor","name","GameSettings","prizes","useSelector","state","managePrizesSettings","automaticDraw","defaultChecked","to","Home","StyledButton","styled","div","SummaryBox","presentStateDrawNumbers","drewNumbers","present","canUndo","past","length","canRedo","future","console","log","data-toggle","title","onClick","UndoActionCreators","undo","disabled","size","color","redo","TombolaGame","initialNumbers","mathUtils","range","gameNumber","chunkArray","useEffect","numbers","SingleItems","array","chArray","value","drewNumber","addDrewNumber","SingleBox","box","rangeRightEdgeExcluded","min","max","Array","_","i","from","chunk_size","results","c","push","splice","Loader","role","App","fallback","exact","path","process","component","Boolean","window","location","hostname","match","initialState","action","undoableDrewNumbers","undoable","undefined","newPrizes","p","tombolaApp","combineReducers","i18n","use","I18NextXhrBackend","I18nextBrowserLanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ns","defaultNS","backend","loadPath","composeEnhancers","composeWithDevTools","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.400a269e.chunk.js","sourcesContent":["export const changePrizeActivation = (id) => {\r\n    return {\r\n        type: \"CHANGE_PRIZE_ACTIVATION\",\r\n        id\r\n    }\r\n};\r\n\r\nexport const changeAutomaticDrawState = () => {\r\n    return {\r\n        type: \"CHANGE_AUTOMATIC_DRAW_STATE\"\r\n    }\r\n};\r\n\r\nexport const addInitialNumbers = (numbers) => {\r\n    return {\r\n        type: \"ADD_INITIAL_NUMBERS\",\r\n        numbers\r\n    }\r\n}\r\n\r\nexport const addDrewNumber = (drewNumber) => {\r\n    return{\r\n        type: \"ADD_DREW_NUMBER\",\r\n        drewNumber\r\n    }\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst InlineCheckboxList = ({ items, handleFunction, labelTip, i18nPath }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCheckChange = e => {\r\n    dispatch(handleFunction(parseInt(e.target.id)));\r\n  };\r\n\r\n  const list = items.map(item => {\r\n    return (\r\n      <div\r\n        className=\"custom-control custom-checkbox custom-control-inline\"\r\n        key={item.id}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"custom-control-input\"\r\n          onChange={handleCheckChange}\r\n          checked={item.checked}\r\n          id={item.id}\r\n        />\r\n        <label htmlFor={item.id} className=\"custom-control-label\">\r\n          {t(`${i18nPath}.${item.name}`)}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-wrap justify-content-lg-between justify-content-md-between justify-content-xs-center\">\r\n        {list}\r\n      </div>\r\n      <small className=\"form-check-label\">{labelTip}</small>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InlineCheckboxList;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeAutomaticDrawState,\r\n  changePrizeActivation\r\n} from \"../actions/prizeAction\";\r\nimport InlineCheckboxList from \"./generic-components/InlineCheckboxList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GameSettings = () => {\r\n  const { t } = useTranslation();\r\n  const prizes = useSelector(state => state.managePrizesSettings.prizes);\r\n  const automaticDraw = useSelector(state => state.managePrizesSettings.automaticDraw);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSwitchChange = () => {\r\n    dispatch(changeAutomaticDrawState());\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <InlineCheckboxList\r\n          items={prizes}\r\n          handleFunction={changePrizeActivation}\r\n          labelTip={t(\"welcome-page.settings-checkbox-tip\")}\r\n          i18nPath=\"welcome-page.prizes\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group d-flex flex-wrap\">\r\n        <div className=\"custom-control custom-switch\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            onChange={handleSwitchChange}\r\n            defaultChecked={automaticDraw}\r\n            id=\"customSwitch1\"\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n            {t(\"welcome-page.automatic-draw\")}\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-center \">\r\n        <Link to={`/tombola_game`} className=\"btn btn-primary text-wrap\" type=\"submit\">\r\n          {t(\"welcome-page.start-the-game\")}\r\n        </Link>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GameSettings;\r\n","import React from \"react\";\r\nimport GameSettings from \"./GameSettings\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"container-fluid vh-100 d-flex justify-content-center align-items-center\">\r\n      <div className=\"row\">\r\n        <div className=\"card mx-5\">\r\n          <div className=\"card-body\">\r\n            <h1 className=\"card-title\">{t(\"welcome-page.prizes.tombola\")}</h1>\r\n            <GameSettings />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ActionCreators as UndoActionCreators } from \"redux-undo\";\r\nimport { RotateCcw, RotateCw, Settings } from \"react-feather\";\r\n\r\nconst StyledButton = styled.div`\r\n  pointer-events: none;\r\n  position: relative;\r\n  width: 50%;\r\n  padding-bottom: 50%;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n\r\n  div {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 6vw;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\nconst SummaryBox = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const presentStateDrawNumbers = useSelector(\r\n    state => state.drewNumbers.present\r\n  );\r\n\r\n  const canUndo = useSelector(state => state.drewNumbers.past.length) > 0;\r\n  const canRedo = useSelector(state => state.drewNumbers.future.length) > 0;\r\n  console.log(canUndo, canRedo);\r\n\r\n  const handleBackArrowClick = () => {\r\n    console.log(\"UNDO\");\r\n    dispatch(UndoActionCreators.undo());\r\n  };\r\n\r\n  const handleForthArrowClick = () => {\r\n    console.log(\"REDO\");\r\n    dispatch(UndoActionCreators.redo());\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"card-title\">{t(\"game-page.last-draw-number\")}</div>\r\n                </div>\r\n                <div className=\"card-body d-flex justify-content-center\">\r\n                  <StyledButton>\r\n                    <div>\r\n                      {presentStateDrawNumbers[\r\n                        presentStateDrawNumbers.length - 1\r\n                      ] == null\r\n                        ? \"#\"\r\n                        : presentStateDrawNumbers[\r\n                            presentStateDrawNumbers.length - 1\r\n                          ]}\r\n                    </div>\r\n                  </StyledButton>\r\n                </div>\r\n                <div className=\"card-footer d-flex flex-wrap justify-content-between\">\r\n                  <div className=\"btn-group d-flex \">\r\n                    <button\r\n                      className=\"btn btn-sm btn-warning mx-1 my-1\"\r\n                      data-toggle=\"back-arrow\"\r\n                      title={t(\"game-page.go-back\")}\r\n                      onClick={() => handleBackArrowClick()}\r\n                      disabled={!canUndo}\r\n                    >\r\n                      <RotateCcw size=\"20\" color=\"white\" />\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-sm btn-warning mx-1 my-1\"\r\n                      data-toggle=\"forth-arrow\"\r\n                      title={t(\"game-page.go-forth\")}\r\n                      onClick={() => handleForthArrowClick()}\r\n                      disabled={!canRedo}\r\n                    >\r\n                      <RotateCw size=\"20\" color=\"white\" />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"btn btn-sm btn-danger mx-1 my-1\">\r\n                    <Settings size=\"20\" color=\"white\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryBox;\r\n","import SummaryBox from \"./SummaryBox\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addInitialNumbers, addDrewNumber } from \"../actions/prizeAction\";\r\n\r\nconst TombolaGame = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  //const initialNumbers2 = mathUtils.range(1, 90);\r\n  const initialNumbers = mathUtils.range(1, 90);\r\n  console.log(initialNumbers);\r\n  const gameNumber = mathUtils.chunkArray(initialNumbers, 15);\r\n\r\n  useEffect(() => {\r\n    dispatch(addInitialNumbers(initialNumbers));\r\n  }, []);\r\n\r\n  console.log(gameNumber);\r\n\r\n  const handleNumberClick = e => {\r\n    console.log(e);\r\n    dispatch(addDrewNumber(e));\r\n  };\r\n\r\n  const SingleItems = ({ array }) => {\r\n    return (\r\n      <div key={array}>\r\n        {array.map(chArray => (\r\n          <div className=\"container-fluid\" key={`container-${chArray}`}>\r\n            <div className=\"row justify-content-between\" key={chArray}>\r\n              {chArray.map(item => (\r\n                <div\r\n                  className=\"btn btn-outline-warning col mx-1 my-1\"\r\n                  key={item}\r\n                  value={item}\r\n                  onClick={() => handleNumberClick(item)}\r\n                >\r\n                  <div>{item}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SingleBox = ({ array }) => {\r\n    return (\r\n      <>\r\n        {array.map(box => (\r\n          <div className=\"col-md-6 my-1 col-12\" key={`box-${box}`}>\r\n            <div className=\"card\" key={box}>\r\n              <div className=\"card-body\">\r\n                <SingleItems array={mathUtils.chunkArray(box, 5)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const GameBox = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-title\">\r\n            {t(\"game-page.actual-prize\")}: {t(\"welcome-page.prizes.tombola\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row my-3\">\r\n              <SingleBox array={gameNumber} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-md-center\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row my-2\">\r\n          <div className=\"col-xl-4  col-md-4 offset-md-0 col-12 order-md-1\">\r\n            <SummaryBox />\r\n          </div>\r\n\r\n          <div className=\"col-xl-8             col-md-8             col-12 order-md-0\">\r\n            <GameBox />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TombolaGame;\r\n\r\nconst mathUtils = {\r\n  // create an array of numbers between min and max (right edge excluded)\r\n  rangeRightEdgeExcluded: (min, max) =>\r\n    [...Array(max - min)].map((_, i) => i + min),\r\n  // create an array of numbers between min and max (edges included)\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n  chunkArray: (array, chunk_size) => {\r\n    let results = [];\r\n    let c = [...array];\r\n    while (c.length) {\r\n      results.push(c.splice(0, chunk_size));\r\n    }\r\n    //console.log(results);\r\n    return results;\r\n  }\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport TombolaGame from \"./components/TombolaGame\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Home} />\r\n            <Route\r\n              path={process.env.PUBLIC_URL + \"/tombola_game\"}\r\n              component={TombolaGame}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nconst Loader = () => (\r\n  <div className=\"spinner-border text-primary\" role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import undoable from \"redux-undo\";\r\n\r\nconst initialState = [];\r\n\r\nconst drewNumber = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DREW_NUMBER\":\r\n      return action.drewNumber;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst drewNumbers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DREW_NUMBER\": {\r\n        return [...state, drewNumber(undefined, action)];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst undoableDrewNumbers = undoable(drewNumbers);\r\n\r\nexport default undoableDrewNumbers;\r\n","const initialState = {\r\n  prizes: [\r\n    { id: 1, name: \"ambo\", checked: true },\r\n    { id: 2, name: \"terna\", checked: true },\r\n    { id: 3, name: \"quaterna\", checked: true },\r\n    { id: 4, name: \"cinquina\", checked: true },\r\n    { id: 5, name: \"tombola\", checked: true },\r\n    { id: 6, name: \"tombolino\", checked: true }\r\n  ],\r\n  automaticDraw: false\r\n};\r\n\r\nconst managePrizesSettings = (state = initialState, action) => {\r\n  console.log(\"ACTION: \", action);\r\n\r\n  switch (action.type) {\r\n    case \"CHANGE_PRIZE_ACTIVATION\": {\r\n      let newPrizes = state.prizes.map(p => {\r\n        if (p.id === action.id) {\r\n          p.checked = !p.checked;\r\n        }\r\n        return p;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        prizes: newPrizes\r\n      };\r\n    }\r\n    case \"CHANGE_AUTOMATIC_DRAW_STATE\": {\r\n      return {\r\n        ...state,\r\n        automaticDraw: !state.automaticDraw\r\n      };\r\n    }\r\n    case \"ADD_INITIAL_NUMBERS\": {\r\n      console.log(action.numbers);\r\n      return {\r\n        ...state,\r\n        numbers: action.numbers\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default managePrizesSettings;\r\n","import {combineReducers} from 'redux';\r\nimport drewNumbers from './drewNumbers';\r\nimport managePrizesSettings from './managePrizesSettings';\r\n\r\nconst tombolaApp = combineReducers({\r\n    drewNumbers,\r\n    managePrizesSettings\r\n})\r\n\r\nexport default tombolaApp;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport I18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\r\nimport I18NextXhrBackend from \"i18next-xhr-backend\";\r\n\r\nconst options = {\r\n  fallbackLng: \"it\",\r\n  debug: true,\r\n  interpolation: {\r\n    escapeValue: false\r\n  },\r\n  ns: [\"translation\"],\r\n  defaultNS: \"translation\",\r\n  backend: {\r\n    loadPath: \"locales/{{lng}}/{{ns}}.json\"\r\n  }\r\n};\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(I18NextXhrBackend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(I18nextBrowserLanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  .init(options);\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n// import i18n (needs to be bundled ;))\r\nimport \"./i18n\";\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  // options like actionSanitizer, stateSanitizer\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n  // other store enhancers if any\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}